{
  "name": "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ Apple ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 8 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1120,
        -80
      ],
      "id": "be60caaf-8b9c-48a1-88cb-0f93532a991e",
      "name": "Schedule Trigger (8:00 AM)"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1DkT4MRxtGPIIqOuofyAcO5nMaAwn-WREVkHbzdsASyU",
          "mode": "list",
          "cachedResultName": "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ Apple ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1DkT4MRxtGPIIqOuofyAcO5nMaAwn-WREVkHbzdsASyU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1437698346,
          "mode": "list",
          "cachedResultName": "‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1DkT4MRxtGPIIqOuofyAcO5nMaAwn-WREVkHbzdsASyU/edit#gid=1437698346"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -896,
        -80
      ],
      "id": "201d789b-69ec-48bf-aa9c-e7564a2384a9",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "JuO7zv2aoAdcklRn",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// ===================================================\n// Process Sales Data (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç timestamp ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢)\n// ===================================================\nconst salesData = [];\n\nfor (const item of $input.all()) {\n  const json = item.json;\n\n  if (json['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢'] && json['‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'] && json['‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤']) {\n    // ‡πÅ‡∏¢‡∏Å‡∏ß‡∏±‡∏ô ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡∏õ‡∏µ ‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤\n    const timestampStr = json['‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤'].trim(); // \"26/10/2025, 21:46:47\"\n    const [datePart, timePart] = timestampStr.split(',').map(s => s.trim()); // [\"26/10/2025\", \"21:46:47\"]\n    const [day, month, year] = datePart.split('/').map(Number); // [26,10,2025]\n    const [hour, minute, second] = timePart.split(':').map(Number); // [21,46,47]\n\n    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Date object ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢\n    const isoTimestamp = new Date(year, month - 1, day, hour, minute, second).toISOString();\n\n    salesData.push({\n      date: json['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢'],                 \n      product: json['‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'],\n      quantity: json['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô'] || 0,\n      revenue: json['‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°'] || 0,\n      category: json['‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà'] || 'N/A',\n      timestamp: isoTimestamp\n    });\n  }\n}\n\n// ===================================================\n// ‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°\n// ===================================================\nconst totalRevenue = salesData.reduce((sum, item) => sum + item.revenue, 0);\nconst totalQuantity = salesData.reduce((sum, item) => sum + item.quantity, 0);\n\nconst productStats = {};\nsalesData.forEach(item => {\n  if (!productStats[item.product]) productStats[item.product] = { quantity: 0, revenue: 0 };\n  productStats[item.product].quantity += item.quantity;\n  productStats[item.product].revenue += item.revenue;\n});\n\nconst topProducts = Object.entries(productStats)\n  .sort((a, b) => b[1].revenue - a[1].revenue)\n  .slice(0, 10);\n\nconst dailySales = {};\nsalesData.forEach(item => {\n  if (!dailySales[item.date]) dailySales[item.date] = 0;\n  dailySales[item.date] += item.revenue;\n});\nconst sortedDates = Object.keys(dailySales).sort((a,b) => new Date(a) - new Date(b));\n\nconst categoryStats = {};\nsalesData.forEach(item => {\n  if (!categoryStats[item.category]) categoryStats[item.category] = 0;\n  categoryStats[item.category] += item.revenue;\n});\n\nconst salesSummary = salesData.slice(0, 30).map(item => \n  `${item.date}: ${item.product} (${item.quantity} ‡∏ä‡∏¥‡πâ‡∏ô, ${item.revenue.toLocaleString()} ‡∏ö‡∏≤‡∏ó)`\n).join('\\n');\n\nreturn [{\n  json: {\n    salesData,\n    salesSummary,\n    totalRevenue,\n    totalQuantity,\n    productStats,\n    dataCount: salesData.length,\n    analysisDate: new Date().toISOString().split('T')[0],\n    topProducts,\n    dailySales,\n    sortedDates,\n    categoryStats\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -688,
        -80
      ],
      "id": "1a94bbca-c724-45ed-ae77-cca7ad596e81",
      "name": "Process Sales Data1"
    },
    {
      "parameters": {
        "jsCode": "const data = $input.first().json;\n\nif (!data.topProducts || !data.dailySales || !data.sortedDates || !data.categoryStats) {\n  throw new Error('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö! ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö node \"Process Sales Data\"');\n}\n\n// --- Top Products Bar Chart ---\nconst topProducts = data.topProducts.slice(0,10);\nconst barChartConfig = {\n  type: 'bar',\n  data: {\n    labels: topProducts.map(([name]) => name),\n    datasets: [{\n      label: '‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ (‡∏ö‡∏≤‡∏ó)',\n      data: topProducts.map(([, stats]) => stats.revenue),\n      backgroundColor: 'rgba(54, 162, 235, 0.8)',\n      borderColor: 'rgba(54, 162, 235, 1)',\n      borderWidth: 2\n    }]\n  },\n  options: {\n    responsive: true,\n    plugins: { legend: { display: false }, title: { display: true, text: 'üìä Top 10 ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ', font:{size:20}, color:'#333' } },\n    layout: { padding: 20 },\n    scales: {\n      y: { beginAtZero: true, ticks:{callback: v=>v.toLocaleString('th-TH')+' ‡∏ø'}, grid:{color:'rgba(0,0,0,0.1)'} },\n      x: { ticks:{maxRotation:45,minRotation:45}, grid:{display:false} }\n    }\n  }\n};\n\n// --- Last 14 days Line Chart ---\nconst lastDates = data.sortedDates.slice(-14);\nconst lastSales = lastDates.map(d => data.dailySales[d] || 0);\n\nconst lineChartConfig = {\n  type: 'line',\n  data: { labels:lastDates, datasets:[{\n    label:'‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô (‡∏ö‡∏≤‡∏ó)',\n    data:lastSales,\n    fill:true,\n    backgroundColor:'rgba(75,192,192,0.2)',\n    borderColor:'rgba(75,192,192,1)',\n    borderWidth:3,\n    tension:0.4,\n    pointRadius:5,\n    pointBackgroundColor:'rgba(75,192,192,1)',\n    pointBorderColor:'#fff',\n    pointBorderWidth:2,\n    pointHoverRadius:7\n  }]},\n  options:{\n    responsive:true,\n    plugins:{ legend:{display:false}, title:{display:true,text:'üìà ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ 14 ‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î', font:{size:20}, color:'#333'}},\n    layout:{padding:20},\n    scales:{ y:{beginAtZero:true,ticks:{callback:v=>v.toLocaleString('th-TH')+' ‡∏ø'},grid:{color:'rgba(0,0,0,0.1)'}}, x:{grid:{color:'rgba(0,0,0,0.1)'}} }\n  }\n};\n\n// --- Category Pie Chart ---\nconst pieChartLabels = Object.keys(data.categoryStats);\nconst pieChartData = Object.values(data.categoryStats);\nconst colors = ['rgba(255,99,132,0.8)','rgba(54,162,235,0.8)','rgba(255,206,86,0.8)','rgba(75,192,192,0.8)','rgba(153,102,255,0.8)','rgba(255,159,64,0.8)','rgba(231,233,237,0.8)','rgba(255,99,255,0.8)'];\n\nconst pieChartConfig = {\n  type:'pie',\n  data:{labels:pieChartLabels,datasets:[{data:pieChartData, backgroundColor: colors.slice(0,pieChartLabels.length), borderColor:'#fff', borderWidth:2}]},\n  options:{responsive:true,plugins:{legend:{display:true,position:'right'},title:{display:true,text:'üç∞ ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà',font:{size:20},color:'#333'}},layout:{padding:50}}\n};\n\n// --- Generate URLs ---\nconst baseUrl = 'https://quickchart.io/chart';\nconst width = 800, height = 500;\n\nreturn [{\n  json:{\n    ...data,\n    barChartUrl: `${baseUrl}?width=${width}&height=${height}&backgroundColor=white&c=${encodeURIComponent(JSON.stringify(barChartConfig))}`,\n    lineChartUrl: `${baseUrl}?width=${width}&height=${height}&backgroundColor=white&c=${encodeURIComponent(JSON.stringify(lineChartConfig))}`,\n    pieChartUrl: `${baseUrl}?width=${width}&height=${height}&backgroundColor=white&c=${encodeURIComponent(JSON.stringify(pieChartConfig))}`,\n    chartGenerated:true\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -480,
        -80
      ],
      "id": "ac072a08-d5a4-4611-bad9-b7a33e976a30",
      "name": "Generate Charts1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢:\n\n**üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ ({{ $json.dataCount }} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)**\n{{ $json.salesSummary }}\n\n**üí∞ ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:**\n- ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°: {{ $json.totalRevenue.toLocaleString('th-TH') }} ‡∏ö‡∏≤‡∏ó\n- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢: {{ $json.totalQuantity }} ‡∏ä‡∏¥‡πâ‡∏ô\n- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {{ $json.dataCount }} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n\n**üì¶ ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:**\n{{ JSON.stringify($json.productStats, null, 2) }}\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞‡∏™‡∏£‡∏∏‡∏õ‡πÉ‡∏ô 3 ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å:\n\n**1. üèÜ Top 3 ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ**\n- ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏¢‡∏≠‡∏î‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ\n- ‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏¥‡πâ‡∏ô + ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ)\n- ‡∏ö‡∏≠‡∏Å‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°\n\n**2. üëÄ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°**\n- ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏î‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏®‡∏±‡∏Å‡∏¢‡∏†‡∏≤‡∏û‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï\n- ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° stock ‡∏´‡∏£‡∏∑‡∏≠ promote\n- ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á\n\n**3. üìà ‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤**\n- ‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå\n- ‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå\n- ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ\n\n\n‡πÉ‡∏ä‡πâ emoji ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö ‡∏ï‡∏£‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠\n‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 2500 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£",
        "messages": {
          "messageValues": [
            {
              "message": "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥ business intelligence ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏ä‡∏¥‡∏á‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡πÅ‡∏•‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -272,
        -80
      ],
      "id": "c90a29fa-96dd-4a2c-b668-94087fbd9e78",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -336,
        128
      ],
      "id": "9c2e89ba-4fc9-4884-bb91-cc43fd68a2ac",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "FNTLr62FsyBeEYHP",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// ===================================================\n// LINE Message Formatter ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° AI\n// ===================================================\n\n// ===================================================\n// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö URL\n// ===================================================\nfunction safeUrl(url) {\n  const dummy = \"https://dummyimage.com/800x500/cccccc/ffffff&text=No+Chart\";\n  if (!url || typeof url !== \"string\") return dummy;\n  const clean = url.trim();\n  if (!/^https?:\\/\\//.test(clean)) return dummy;\n  return clean;\n}\n\n// ===================================================\n// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° AI\n// ===================================================\nfunction cleanAIText(text) {\n  if (!text || typeof text !== 'string') {\n    return '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ';\n  }\n\n  let cleaned = text;\n\n  // 1. ‡∏•‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô\n  cleaned = cleaned.replace(/^(‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°|‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô)‡∏Ñ‡∏£‡∏±‡∏ö.*?‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏∞(‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç|‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå).*?‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡∏£‡∏±‡∏ö\\n+/s, '');\n  \n  // 2. ‡∏•‡∏ö‡πÄ‡∏™‡πâ‡∏ô‡∏Ñ‡∏±‡πà‡∏ô (---)\n  cleaned = cleaned.replace(/\\n*-{3,}\\n*/g, '\\n\\n');\n  \n  // 3. ‡πÅ‡∏õ‡∏•‡∏á Markdown Headers (### ) ‡πÄ‡∏õ‡πá‡∏ô emoji + ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°\n  cleaned = cleaned.replace(/###\\s*\\*{0,2}(.+?)\\*{0,2}/g, 'üìå $1');\n  \n  // 4. ‡∏•‡∏ö markdown formatting ‡∏≠‡∏∑‡πà‡∏ô‡πÜ\n  cleaned = cleaned.replace(/\\*{1,2}(.+?)\\*{1,2}/g, '$1'); // **bold** ‡∏´‡∏£‡∏∑‡∏≠ *italic*\n  cleaned = cleaned.replace(/\\*/g, ''); // ‡∏•‡∏ö * ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n  cleaned = cleaned.replace(/_{1,2}(.+?)_{1,2}/g, '$1'); // __bold__ ‡∏´‡∏£‡∏∑‡∏≠ _italic_\n  \n  // 5. ‡πÅ‡∏õ‡∏•‡∏á bullet points\n  cleaned = cleaned.replace(/^\\* /gm, '‚Ä¢ ');\n  cleaned = cleaned.replace(/^- /gm, '‚Ä¢ ');\n  \n  // 6. ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏•‡∏≤‡∏¢ line ‡∏ã‡πâ‡∏≠‡∏ô\n  cleaned = cleaned.replace(/\\n{3,}/g, '\\n\\n');\n  \n  // 7. ‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤-‡∏´‡∏•‡∏±‡∏á\n  cleaned = cleaned.trim();\n  \n  // 8. ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß (LINE Flex Message ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 3000 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)\n  // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏≤‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏ï‡∏±‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 2500 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£\n  if (cleaned.length > 2500) {\n    cleaned = cleaned.substring(0, 2500) + '...\\n\\nüìä [‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡∏î‡∏ó‡∏≠‡∏ô - ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏ï‡πá‡∏°‡πÉ‡∏ô Google Sheets]';\n  }\n  \n  return cleaned;\n}\n\n// ===================================================\n// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏Å‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏à‡∏≤‡∏Å AI (‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å - ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö‡∏Å‡∏ß‡πà‡∏≤)\n// ===================================================\nfunction extractKeyInsights(text) {\n  if (!text || typeof text !== 'string') {\n    return '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ';\n  }\n\n  const insights = [];\n  \n  // ‡∏´‡∏≤ Top 3 Products\n  const top3Match = text.match(/ü•á\\s*\\*{0,2}1\\.\\s*(.+?)\\*{0,2}\\s*\\n.*?‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ:\\*{0,2}\\s*([\\d,]+)\\s*‡∏ö‡∏≤‡∏ó/s);\n  if (top3Match) {\n    insights.push(`ü•á ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î: ${top3Match[1]}`);\n    insights.push(`üí∞ ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ: ${top3Match[2]} ‡∏ö‡∏≤‡∏ó`);\n  }\n  \n  // ‡∏´‡∏≤‡πÇ‡∏≠‡∏Å‡∏≤‡∏™\n  const opportunityMatch = text.match(/‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏î‡∏≤‡∏ß‡∏£‡∏∏‡πà‡∏á.*?:.*?\\*{0,2}(.+?)\\*{0,2}:/s);\n  if (opportunityMatch) {\n    insights.push(`\\n‚ú® ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™: ${opportunityMatch[1]}`);\n  }\n  \n  // ‡∏´‡∏≤‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥\n  const recommendMatch = text.match(/‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå.*?\\n\\n(.*?)(?:\\n\\n\\*{0,2}üí∞|$)/s);\n  if (recommendMatch) {\n    let recommendations = recommendMatch[1];\n    // ‡∏ï‡∏±‡∏î numbering ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö\n    recommendations = recommendations.replace(/\\d+\\.\\s*\\*{0,2}(.+?):\\*{0,2}\\s*/g, '‚Ä¢ $1: ');\n    recommendations = recommendations.replace(/\\n/g, ' ').substring(0, 300);\n    insights.push(`\\nüí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:\\n${recommendations}...`);\n  }\n  \n  return insights.join('\\n');\n}\n\n// üß© ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Node ‡∏ï‡πà‡∏≤‡∏á ‡πÜ\nconst aiNode = $input.first().json;\nconst chartNode = $('Generate Charts1').first().json;\nconst processNode = $('Process Sales Data1').first().json;\n\n// üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å\nconst aiRawText = aiNode.text || aiNode.output || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ';\nconst totalRevenue = processNode.totalRevenue || 0;\nconst totalQuantity = processNode.totalQuantity || 0;\nconst topProducts = processNode.topProducts || [];\n\n// ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° AI (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 1 ‡πÉ‡∏ô 2 ‡∏ß‡∏¥‡∏ò‡∏µ)\n// ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡πá‡∏° (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)\nconst aiResponse = cleanAIText(aiRawText);\n\n// ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡∏™‡∏Å‡∏±‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç (‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö‡∏Å‡∏ß‡πà‡∏≤)\n// const aiResponse = extractKeyInsights(aiRawText);\n\n// üîç Debug: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° AI ‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß\nconsole.log(\"ü§ñ AI Response (cleaned):\", aiResponse.substring(0, 200) + \"...\");\nconsole.log(\"üìè Length:\", aiResponse.length);\n\n// ‚úÖ ‡∏î‡∏∂‡∏á URL ‡∏à‡∏≤‡∏Å Generate Charts1\nconst barChartUrl = safeUrl(chartNode.barChartUrl || \"https://dummyimage.com/800x500/cccccc/ffffff&text=No+Bar+Chart\");\nconst lineChartUrl = safeUrl(chartNode.lineChartUrl || \"https://dummyimage.com/800x500/cccccc/ffffff&text=No+Line+Chart\");\nconst pieChartUrl = safeUrl(chartNode.pieChartUrl || \"https://dummyimage.com/800x500/cccccc/ffffff&text=No+Pie+Chart\");\n\n// üñºÔ∏è URL ‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏≤‡∏ü (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Flex Message)\nlet chartUrl = safeUrl(chartNode.barChartUrl || chartNode.lineChartUrl || chartNode.pieChartUrl);\n\n// üìã URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏´‡∏•‡∏±‡∏Å\nlet sheetUrl = safeUrl(\"https://docs.google.com/spreadsheets/d/1T4TUZWwVJ36RHKG4gHrbaLh6OVSHIGaP9qneuderuT8\");\n\n// üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\nconst analysisDate = new Date().toLocaleString('th-TH', {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit',\n  hour12: false\n});\n\n// ===================================================\n// üí≥ 1Ô∏è‚É£ Summary Card\n// ===================================================\nconst summaryCard = {\n  type: \"flex\",\n  altText: \"üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô\",\n  contents: {\n    type: \"bubble\",\n    size: \"mega\",\n    hero: {\n      type: \"box\",\n      layout: \"vertical\",\n      contents: [\n        { \n          type: \"text\", \n          text: \"üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢\", \n          size: \"xxl\", \n          weight: \"bold\", \n          color: \"#FFFFFF\", \n          align: \"center\" \n        },\n        { \n          type: \"text\", \n          text: analysisDate, \n          size: \"sm\", \n          color: \"#FFFFFF\", \n          align: \"center\", \n          margin: \"md\", \n          wrap: true \n        }\n      ],\n      backgroundColor: \"#3B82F6\",\n      paddingAll: \"25px\",\n      spacing: \"md\"\n    },\n    body: {\n      type: \"box\",\n      layout: \"vertical\",\n      contents: [\n        {\n          type: \"box\",\n          layout: \"horizontal\",\n          contents: [\n            { type: \"text\", text: \"üí∞\", size: \"xl\", flex: 0 },\n            {\n              type: \"box\",\n              layout: \"vertical\",\n              contents: [\n                { \n                  type: \"text\", \n                  text: \"‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°\", \n                  size: \"sm\", \n                  color: \"#666666\", \n                  weight: \"bold\" \n                },\n                { \n                  type: \"text\", \n                  text: `${totalRevenue.toLocaleString('th-TH')} ‡∏ö‡∏≤‡∏ó`, \n                  size: \"xl\", \n                  color: \"#10B981\", \n                  weight: \"bold\", \n                  margin: \"xs\" \n                }\n              ],\n              margin: \"md\"\n            }\n          ],\n          backgroundColor: \"#F0FDF4\",\n          cornerRadius: \"md\",\n          paddingAll: \"15px\"\n        },\n        {\n          type: \"box\",\n          layout: \"horizontal\",\n          contents: [\n            { \n              type: \"text\", \n              text: \"üì¶ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤\", \n              size: \"md\", \n              color: \"#666666\", \n              flex: 0 \n            },\n            { \n              type: \"text\", \n              text: `${totalQuantity.toLocaleString('th-TH')} ‡∏ä‡∏¥‡πâ‡∏ô`, \n              size: \"md\", \n              color: \"#3B82F6\", \n              weight: \"bold\", \n              align: \"end\" \n            }\n          ],\n          margin: \"xl\",\n          paddingAll: \"10px\"\n        },\n        { \n          type: \"separator\", \n          margin: \"xl\", \n          color: \"#E5E7EB\" \n        },\n        { \n          type: \"text\", \n          text: \"üèÜ Top 3 ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ\", \n          size: \"lg\", \n          weight: \"bold\", \n          color: \"#1F2937\", \n          margin: \"xl\" \n        }\n      ],\n      paddingAll: \"20px\"\n    },\n    footer: {\n      type: \"box\",\n      layout: \"vertical\",\n      contents: [\n        {\n          type: \"button\",\n          style: \"primary\",\n          height: \"sm\",\n          action: { \n            type: \"uri\", \n            label: \"üìä ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏ï‡πá‡∏°‡πÉ‡∏ô Google Sheets\", \n            uri: sheetUrl \n          },\n          color: \"#2563EB\"\n        },\n        { \n          type: \"text\", \n          text: \"‡∏î‡∏π‡∏Å‡∏£‡∏≤‡∏ü‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á üëá\", \n          size: \"sm\", \n          color: \"#6B7280\", \n          align: \"center\", \n          weight: \"bold\", \n          margin: \"md\" \n        }\n      ],\n      paddingAll: \"15px\",\n      backgroundColor: \"#F9FAFB\"\n    }\n  }\n};\n\n// ‡πÄ‡∏û‡∏¥‡πà‡∏° Top 3\nif (topProducts.length > 0) {\n  topProducts.slice(0, 3).forEach((product, index) => {\n    const [name, stats] = product;\n    const medal = [\"ü•á\", \"ü•à\", \"ü•â\"][index] || \"‚≠ê\";\n    const bgColor = [\"#FEF3C7\", \"#E0E7FF\", \"#FFEDD5\"][index] || \"#FFFFFF\";\n\n    summaryCard.contents.body.contents.push({\n      type: \"box\",\n      layout: \"horizontal\",\n      contents: [\n        { type: \"text\", text: medal, size: \"xl\", flex: 0 },\n        {\n          type: \"box\",\n          layout: \"vertical\",\n          contents: [\n            { \n              type: \"text\", \n              text: name, \n              size: \"md\", \n              color: \"#1F2937\", \n              weight: \"bold\", \n              wrap: true \n            },\n            { \n              type: \"text\", \n              text: `${stats.quantity} ‡∏ä‡∏¥‡πâ‡∏ô | ${stats.revenue.toLocaleString('th-TH')} ‡∏ö‡∏≤‡∏ó`, \n              size: \"sm\", \n              color: \"#059669\", \n              margin: \"xs\", \n              weight: \"bold\" \n            }\n          ],\n          margin: \"md\"\n        }\n      ],\n      margin: \"md\",\n      backgroundColor: bgColor,\n      cornerRadius: \"md\",\n      paddingAll: \"12px\"\n    });\n  });\n}\n\n// ===================================================\n// ü§ñ AI Analysis Bubble\n// ===================================================\nconst aiAnalysisBubble = {\n  type: \"flex\",\n  altText: \"ü§ñ ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå\",\n  contents: {\n    type: \"bubble\",\n    size: \"mega\",\n    header: {\n      type: \"box\",\n      layout: \"horizontal\",\n      contents: [\n        { type: \"text\", text: \"ü§ñ\", size: \"xl\", flex: 0 },\n        { \n          type: \"text\", \n          text: \"‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå\", \n          weight: \"bold\", \n          size: \"lg\", \n          color: \"#FFFFFF\", \n          margin: \"md\" \n        }\n      ],\n      paddingAll: \"20px\",\n      backgroundColor: \"#8B5CF6\"\n    },\n    body: { \n      type: \"box\", \n      layout: \"vertical\", \n      contents: [\n        { \n          type: \"text\", \n          text: aiResponse, \n          wrap: true, \n          size: \"sm\", \n          color: \"#1F2937\" \n        }\n      ], \n      paddingAll: \"20px\" \n    },\n    footer: {\n      type: \"box\",\n      layout: \"horizontal\",\n      contents: [\n        { \n          type: \"text\", \n          text: \"‚úÖ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå\", \n          size: \"sm\", \n          color: \"#10B981\", \n          weight: \"bold\" \n        },\n        { \n          type: \"text\", \n          text: new Date().toLocaleTimeString('th-TH'), \n          size: \"xs\", \n          color: \"#6B7280\", \n          align: \"end\" \n        }\n      ],\n      paddingAll: \"15px\"\n    }\n  }\n};\n\n// ===================================================\n// ‚úÖ ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö LINE\n// ===================================================\nreturn [{\n  json: {\n    to: \"U938a9be63e7f733655278aade4600a8a\",\n    messages: [\n      summaryCard,\n      { \n        type: \"image\", \n        originalContentUrl: barChartUrl, \n        previewImageUrl: barChartUrl \n      },\n      { \n        type: \"image\", \n        originalContentUrl: lineChartUrl, \n        previewImageUrl: lineChartUrl \n      },\n      { \n        type: \"image\", \n        originalContentUrl: pieChartUrl, \n        previewImageUrl: pieChartUrl \n      },\n      aiAnalysisBubble\n    ]\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        128,
        -80
      ],
      "id": "b084ee55-7a09-4602-ade9-e2511808d998",
      "name": "Format LINE Message"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer   uB7COayFFVYMtU+uoGmoUfT5BVpGdKF+HAZsvrbu7sgk4D66Qenxlm1URFgVA2589/jBkx0coJtbXSiH47Oelp5FYoCpdCEPywpdBfNm2QGq0p/ePTJCFBPlXiRBqS4WRTCx1JHnu/dDzH5Yy24x3wdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        352,
        -80
      ],
      "id": "448fb71f-ec78-4127-8fd8-81281d3b2596",
      "name": "Send via LINE Messaging API1"
    },
    {
      "parameters": {
        "jsCode": "// ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å LLM Analysis\nconst previousData = $input.first().json;\nlet aiAnalysis = previousData.output || previousData.response || previousData.text || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå';\n\n// ‡∏•‡∏ö # ‡πÅ‡∏•‡∏∞ * ‡πÅ‡∏•‡∏∞ --- ‡∏≠‡∏≠‡∏Å\naiAnalysis = aiAnalysis.replace(/[#*]/g, '').replace(/---+/g, '');\n\n// ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢ HTML\n// ‡πÅ‡∏¢‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° styling\nconst formattedAnalysis = aiAnalysis\n  .split('\\n\\n')\n  .map(paragraph => {\n    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ emoji ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç\n    if (/^[üèÜüëÄüìàüîçüí°üìä]\\s/.test(paragraph) || /^\\d+\\.\\s/.test(paragraph)) {\n      return `<div class=\"analysis-highlight\">${paragraph}</div>`;\n    }\n    // ‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥\n    return `<p>${paragraph}</p>`;\n  })\n  .join('');\n\n// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å node Generate Charts\nconst chartData = $('Generate Charts1').first().json;\n\n// ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML Email ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°\nconst htmlContent = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <style>\n    body {\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      line-height: 1.6;\n      color: #333;\n      max-width: 100%;\n      margin: 0 auto;\n      padding: 10px;\n      background-color: #f4f4f4;\n    }\n    .container {\n      background-color: white;\n      border-radius: 10px;\n      padding: 35px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n      max-width: 1000px;\n      margin: 0 auto;\n    }\n    .header {\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      color: white;\n      padding: 35px;\n      border-radius: 10px 10px 0 0;\n      margin: -35px -35px 35px -35px;\n      text-align: center;\n    }\n    .header h1 {\n      margin: 0;\n      font-size: 32px;\n    }\n    .summary-box {\n      background-color: #f8f9fa;\n      border-left: 4px solid #667eea;\n      padding: 30px;\n      margin: 30px 0;\n      border-radius: 5px;\n      display: flex;\n      justify-content: space-around;\n      flex-wrap: wrap;\n    }\n    .summary-item {\n      text-align: center;\n      margin: 15px 30px;\n      font-size: 18px;\n      min-width: 200px;\n    }\n    .summary-label {\n      color: #666;\n      font-weight: 500;\n      font-size: 16px;\n      margin-bottom: 10px;\n    }\n    .summary-value {\n      color: #667eea;\n      font-weight: bold;\n      font-size: 28px;\n    }\n    .analysis-section {\n      margin: 40px 0;\n      line-height: 1.8;\n      font-size: 16px;\n    }\n    .analysis-content {\n      background: linear-gradient(135deg, #f5f7fa 0%, #e8eef5 100%);\n      border-radius: 12px;\n      padding: 35px;\n      box-shadow: 0 3px 15px rgba(0,0,0,0.08);\n      border: 1px solid rgba(102, 126, 234, 0.1);\n    }\n    .analysis-content p {\n      margin: 15px 0;\n      color: #444;\n      line-height: 1.9;\n    }\n    .analysis-highlight {\n      background: linear-gradient(135deg, #ffffff 0%, #f0f4ff 100%);\n      border-left: 5px solid #667eea;\n      padding: 20px 25px;\n      margin: 25px 0;\n      border-radius: 8px;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.05);\n      font-weight: 500;\n      color: #333;\n      line-height: 1.9;\n    }\n    .analysis-highlight:hover {\n      transform: translateX(5px);\n      transition: transform 0.3s ease;\n    }\n    .chart-container {\n      text-align: center;\n      margin: 40px 0;\n    }\n    .chart-row {\n      display: flex;\n      justify-content: space-between;\n      gap: 20px;\n      margin: 30px 0;\n      flex-wrap: wrap;\n    }\n    .chart-item {\n      flex: 1;\n      min-width: 45%;\n    }\n    .chart-item-full {\n      width: 100%;\n    }\n    .chart-container img {\n      max-width: 100%;\n      width: 100%;\n      height: auto;\n      border-radius: 8px;\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n      margin: 10px 0;\n    }\n    .chart-title {\n      font-size: 20px;\n      font-weight: 600;\n      color: #444;\n      margin: 20px 0 15px 0;\n      text-align: center;\n    }\n    .footer {\n      text-align: center;\n      margin-top: 50px;\n      padding-top: 30px;\n      border-top: 2px solid #eee;\n      color: #666;\n      font-size: 14px;\n    }\n    \n    /* Responsive design */\n    @media (max-width: 768px) {\n      .container {\n        padding: 20px;\n      }\n      .header {\n        padding: 20px;\n        margin: -20px -20px 20px -20px;\n      }\n      .header h1 {\n        font-size: 24px;\n      }\n      .summary-box {\n        flex-direction: column;\n      }\n      .summary-item {\n        margin: 10px 0;\n      }\n      .chart-row {\n        flex-direction: column;\n      }\n      .chart-item {\n        min-width: 100%;\n      }\n      .analysis-content {\n        padding: 20px;\n      }\n      .analysis-highlight {\n        padding: 15px 20px;\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <h1>üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ Apple</h1>\n      <p style=\"margin: 10px 0 0 0; font-size: 18px;\">‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${new Date().toLocaleDateString('th-TH', { year: 'numeric', month: 'long', day: 'numeric' })}</p>\n    </div>\n    \n    <div class=\"summary-box\">\n      <div class=\"summary-item\">\n        <div class=\"summary-label\">üí∞ ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°</div>\n        <div class=\"summary-value\">${chartData.totalRevenue.toLocaleString('th-TH')} ‡∏ø</div>\n      </div>\n      <div class=\"summary-item\">\n        <div class=\"summary-label\">üì¶ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</div>\n        <div class=\"summary-value\">${chartData.totalQuantity} ‡∏ä‡∏¥‡πâ‡∏ô</div>\n      </div>\n      <div class=\"summary-item\">\n        <div class=\"summary-label\">üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>\n        <div class=\"summary-value\">${chartData.dataCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>\n      </div>\n    </div>\n    \n    <div class=\"analysis-section\">\n      <h2 style=\"color: #667eea; font-size: 24px; margin-bottom: 20px;\">üîç ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h2>\n      <div class=\"analysis-content\">\n        ${formattedAnalysis}\n      </div>\n    </div>\n    \n    <div class=\"chart-container\">\n      <h2 style=\"color: #667eea; font-size: 24px; margin-bottom: 30px;\">üìà ‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥</h2>\n      \n      <div class=\"chart-item-full\">\n        <div class=\"chart-title\"> Top 10 ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ</div>\n        <img src=\"${chartData.barChartUrl}\" alt=\"Bar Chart\">\n      </div>\n      \n      <div class=\"chart-row\">\n        <div class=\"chart-item\">\n          <div class=\"chart-title\"> ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ 30 ‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</div>\n          <img src=\"${chartData.lineChartUrl}\" alt=\"Line Chart\">\n        </div>\n        \n        <div class=\"chart-item\">\n          <div class=\"chart-title\"> ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</div>\n          <img src=\"${chartData.pieChartUrl}\" alt=\"Pie Chart\">\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"footer\">\n      <p>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ | ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ ${new Date().toLocaleString('th-TH')}</p>\n      <p>üìä Powered by n8n Automation</p>\n    </div>\n  </div>\n</body>\n</html>\n`;\n\n// ‡∏™‡∏£‡πâ‡∏≤‡∏á plain text version ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö email client ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö HTML\nconst textContent = `\nüìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ Apple\n‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${new Date().toLocaleDateString('th-TH', { year: 'numeric', month: 'long', day: 'numeric' })}\n\nüí∞ ‡∏™‡∏£‡∏∏‡∏õ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°\n- ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°: ${chartData.totalRevenue.toLocaleString('th-TH')} ‡∏ö‡∏≤‡∏ó\n- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${chartData.totalQuantity} ‡∏ä‡∏¥‡πâ‡∏ô\n- ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${chartData.dataCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n\nüîç ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏≤‡∏Å AI\n${aiAnalysis}\n\nüìä ‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°\n- Top 10 ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ: ${chartData.barChartUrl}\n- ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ 30 ‡∏ß‡∏±‡∏ô: ${chartData.lineChartUrl}\n- ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: ${chartData.pieChartUrl}\n\n‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ | ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ ${new Date().toLocaleString('th-TH')}\n`;\n\nreturn {\n  json: {\n    htmlContent,\n    textContent,\n    subject: `üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ Apple - ${new Date().toLocaleDateString('th-TH', { day: 'numeric', month: 'short', year: 'numeric' })}`,\n    chartData\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        128,
        128
      ],
      "id": "cc547aaf-4751-4a64-a835-1c2bc77e6c9e",
      "name": "Format Email Message"
    },
    {
      "parameters": {
        "sendTo": "prasertkhajusrokar@gmail.com",
        "subject": "={{ $json.subject }}",
        "message": "={{ $json.htmlContent }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        368,
        128
      ],
      "id": "d7c03044-8a84-436a-bb42-55f3627acb71",
      "name": "Send a message",
      "webhookId": "3b21dc64-6b79-48c2-a0d1-3f60791b5c66",
      "credentials": {
        "gmailOAuth2": {
          "id": "HbRQKRDJEPtML18H",
          "name": "Gmail account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger (8:00 AM)": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Process Sales Data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Sales Data1": {
      "main": [
        [
          {
            "node": "Generate Charts1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Charts1": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Format Email Message",
            "type": "main",
            "index": 0
          },
          {
            "node": "Format LINE Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format LINE Message": {
      "main": [
        [
          {
            "node": "Send via LINE Messaging API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Email Message": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send via LINE Messaging API1": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "10c6ea35-e35d-4e60-9b4c-b49dfa24f500",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b0fdbd353b3d60f56600de4b356895824c257be7a727c065cd1e7a122c4e9aff"
  },
  "id": "ibycslbaTyXis1PY",
  "tags": []
}
